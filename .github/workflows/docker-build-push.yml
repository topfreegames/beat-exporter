name: Publish new Docker image

# on:
#   release:
#     types: [published]

on:
  push:
jobs:
  dockerhub-build-push:
    name: DockerHub Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Get the current release version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: Build the Docker image
        run: docker build . --platform linux/amd64,linux/arm64 --file Dockerfile --tag ${GITHUB_REPOSITORY}:latest --tag ${GITHUB_REPOSITORY}:${{steps.vars.outputs.tag}}
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Push the latest Docker image
        run: docker push --all-tags ${GITHUB_REPOSITORY}
  quayio-build-push:
    name: Quay.io Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get the current release version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: Build the Docker image
        run: docker build .  --platform linux/amd64,linux/arm64 --file Dockerfile --tag quay.io/${GITHUB_REPOSITORY}:latest --tag quay.io/${GITHUB_REPOSITORY}:${{steps.vars.outputs.tag}}
      - name: Login to Quay.io Registry
        run: echo ${{ secrets.QUAYIO_TOKEN }} | docker login -u ${{ secrets.QUAYIO_USERNAME }} --password-stdin quay.io
      - name: Push the latest Docker image
        run: docker push --all-tags quay.io/${GITHUB_REPOSITORY}
